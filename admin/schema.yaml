---
group: 
  version: 1.0.1
  required: false
  description: >
    The Group package allows users to create groups to organize content.
  license: 
    name: LGPL
    description: Licensed under the GNU LESSER GENERAL PUBLIC LICENSE.
    url: http://www.gnu.org/copyleft/lesser.html 
  homeable: false
  tables: 
    groups: |
      
      group_id I4 PRIMARY,
      content_id I4 NOTNULL,
      mod_msgs C(1) DEFAULT 'n',
      mod_content C(1) DEFAULT 'y',
      admin_content_strict C(1) DEFAULT 'n',
      view_content_public C(1) DEFAULT 'y'
      CONSTRAINT ', CONSTRAINT `groups_group_id` FOREIGN KEY (`group_id`) REFERENCES `users_groups` (`group_id`)
      , CONSTRAINT `groups_content_id` FOREIGN KEY (`content_id`) REFERENCES `liberty_content` (`content_id`)'
      
    groups_roles: |
      
      role_id I4 PRIMARY,
      role_name C(30),
      role_desc C(255)
      
    groups_permissions: |
      
      perm_name C(128) PRIMARY,
      perm_desc C(250)
      
    groups_roles_perms_map: |
      
      group_id I4 NOTNULL,
      group_content_id I4 NOTNULL,
      perm_name C(128) NOTNULL,
      role_id I4 NOTNULL
      CONSTRAINT ', CONSTRAINT `groups_roles_p_map_gp_c_id` FOREIGN KEY (`group_content_id`) REFERENCES `liberty_content` (`content_id`)
      , CONSTRAINT `groups_roles_p_map_role_id` FOREIGN KEY (`role_id`) REFERENCES `groups_roles` (`role_id`)
      , CONSTRAINT `groups_roles_p_map_perm_name` FOREIGN KEY (`perm_name`) REFERENCES `groups_permissions` (`perm_name`)'
      
    groups_roles_users_map: |
      
      group_id I4 NOTNULL,
      group_content_id I4 NOTNULL,
      user_id I4 NOTNULL,
      role_id I4 NOTNULL
      CONSTRAINT ', CONSTRAINT `groups_roles_users_map_gp_c_id` FOREIGN KEY (`group_content_id`) REFERENCES `liberty_content` (`content_id`)
      , CONSTRAINT `groups_roles_users_map_user_id` FOREIGN KEY (`user_id`) REFERENCES `users_users` (`user_id`)
      , CONSTRAINT `groups_roles_perms_map_role_id` FOREIGN KEY (`role_id`) REFERENCES `groups_roles` (`role_id`)'
      
    groups_content_cnxn_map: |
      
      group_content_id I4 PRIMARY,
      to_content_id I4 PRIMARY,
      to_title C(160),
      pos F
      CONSTRAINT '
      , CONSTRAINT `groups_content_cnxn_gp_c_id_ref` FOREIGN KEY (`group_content_id`) REFERENCES `liberty_content` (`content_id`)
      , CONSTRAINT `groups_content_cnxn_to_c_id_ref` FOREIGN KEY (`to_content_id`) REFERENCES `liberty_content` (`content_id`)'
      
    groups_content_types: |
      
      group_content_id I4 PRIMARY,
      content_type_guid C(32) PRIMARY
      CONSTRAINT ', CONSTRAINT `groups_content_types_gp_c_id` FOREIGN KEY (`group_content_id`) REFERENCES `liberty_content` (`content_id`)
      , CONSTRAINT `groups_content_types_type_guid` FOREIGN KEY (`content_type_guid`) REFERENCES `liberty_content_types` (`content_type_guid`)'
      
    groups_invitations: |
      
      group_id I4 PRIMARY,
      email C(200) PRIMARY,
      invite_id C(32) PRIMARY
      CONSTRAINT '
      , CONSTRAINT `groups_invitations_group_id_ref` FOREIGN KEY (`group_id`) REFERENCES `groups` (`group_id`)'
      
  indexes: 
    groups_group_id_idx: 
      table: groups
      cols: group_id
      opts: 
    groups_content_id_idx: 
      table: groups
      cols: content_id
      opts: 
        - UNIQUE
    groups_roles_perms_group_idx: 
      table: groups_roles_perms_map
      cols: group_id
      opts: 
    groups_roles_perms_content_idx: 
      table: groups_roles_perms_map
      cols: group_content_id
      opts: 
    groups_roles_perms_perm_idx: 
      table: groups_roles_perms_map
      cols: perm_name
      opts: 
    groups_roles_perms_role_idx: 
      table: groups_roles_perms_map
      cols: role_id
      opts: 
    groups_roles_users_group_idx: 
      table: groups_roles_users_map
      cols: group_id
      opts: 
    groups_roles_users_content_idx: 
      table: groups_roles_users_map
      cols: group_content_id
      opts: 
    groups_roles_users_user_idx: 
      table: groups_roles_users_map
      cols: user_id
      opts: 
    groups_roles_users_role_idx: 
      table: groups_roles_users_map
      cols: role_id
      opts: 
  sequences: 
    groups_roles_role_id_seq: 
      start: 4
  defaults: 
    - >
      INSERT INTO `groups_roles`
      (`role_id`,`role_name`, `role_desc`)
      VALUES (1, 'admin', 'Group
      Administrators')
    - >
      INSERT INTO `groups_roles`
      (`role_id`,`role_name`, `role_desc`)
      VALUES (2, 'editors', 'Group Managers')
    - >
      INSERT INTO `groups_roles`
      (`role_id`,`role_name`, `role_desc`)
      VALUES (3, 'registered', 'Group
      Members')
    - >
      INSERT INTO `groups_permissions`
      (`perm_name`,`perm_desc`) VALUES
      ('p_group_group_content_admin', 'Can
      admin group content')
    - >
      INSERT INTO `groups_permissions`
      (`perm_name`,`perm_desc`) VALUES
      ('p_group_group_content_create', 'Can
      create group content')
    - >
      INSERT INTO `groups_permissions`
      (`perm_name`,`perm_desc`) VALUES
      ('p_group_group_content_submit', 'Can
      submit content to group for inclusion')
    - >
      INSERT INTO `groups_permissions`
      (`perm_name`,`perm_desc`) VALUES
      ('p_group_group_att_upload', 'Can upload
      files to group')
    - >
      INSERT INTO `groups_permissions`
      (`perm_name`,`perm_desc`) VALUES
      ('p_group_group_members_admin', 'Can
      admin group members')
    - >
      INSERT INTO `groups_permissions`
      (`perm_name`,`perm_desc`) VALUES
      ('p_group_group_members_view', 'Can view
      group members')
    - >
      INSERT INTO `groups_permissions`
      (`perm_name`,`perm_desc`) VALUES
      ('p_group_group_members_invite', 'Can
      send invitations to the group')
    - >
      INSERT INTO `groups_permissions`
      (`perm_name`,`perm_desc`) VALUES
      ('p_group_group_msgs_admin', 'Can admin
      group forums')
    - >
      INSERT INTO `groups_permissions`
      (`perm_name`,`perm_desc`) VALUES
      ('p_group_group_msgs_create', 'Can post
      messages to group forums')
  permissions: 
    p_group_admin: 
      description: Can admin groups
      level: admin
    p_group_update: 
      description: Can edit groups
      level: editors
    p_group_create: 
      description: Can create groups
      level: registered
    p_group_view: 
      description: Can view groups
      level: basic
    p_group_remove: 
      description: Can delete groups
      level: admin
    p_group_edit_unmapped: 
      description: >
        Can create content items independent of
        groups
      level: editors
  preferences: 
    group_default_ordering: group_id_desc
    group_list_group_id: y
    group_list_title: y
    group_list_description: y
    group_list_groups: y
  requirements: 
    liberty: 
      min: 2.1.6
    boards: 
      min: 0.0.0
    moderation: 
      min: 0.0.1
    modcomments: 
      min: 0.0.0
    libertysecure: 
      min: 1.0.0
    switchboard: 
      min: 0.0.0
